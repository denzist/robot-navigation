<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot">
	<property name="PI" value="3.1415926535897931" />
	<xacro:property name="rob_name" value="robot" />

	<xacro:property name="base_mass" value="7.0"/>
	<xacro:property name="base_hight" value="0.125"/>
	<xacro:property name="base_width" value="0.3"/>
	<xacro:property name="base_length" value="0.4"/>
	<xacro:property name="base_Ix" value="${base_mass*(base_hight*base_hight+base_width*base_width)/12}"/>
	<xacro:property name="base_Iy" value="${base_mass*(base_length*base_length+base_hight*base_hight)/12}"/>
	<xacro:property name="base_Iz" value="${base_mass*(base_length*base_length+base_width*base_width)/12}"/>

	
	<xacro:property name="wheel_radius" value="0.1"/>
	<xacro:property name="wheel_length" value="0.05"/>
	<xacro:property name="wheel_mass" value="0.5"/>
	<xacro:property name="wheel_Iz" value="${wheel_mass*wheel_radius*wheel_radius/2}"/>
	<xacro:property name="wheel_Ix" value="${wheel_mass*(3*wheel_radius*wheel_radius+wheel_length*wheel_length)/12}"/>

	<!-- base of robot-->
	<xacro:macro name="base_link">
		<link name="base_link">
			<visual>
				<geometry>
					<box size="${base_length} ${base_width} ${base_hight}"/>
				</geometry>
				<material name="blue">
					<color rgba="0 0 .8 1"/>
				</material>
			</visual>
			<collision>
				<geometry>
					<box size="${base_length} ${base_width} ${base_hight}"/>
				</geometry>
			</collision>
			<inertial>
				<mass value="${base_mass}"/>
				<inertia ixx="${wheel_Ix}" ixy="0.0" ixz="0.0" iyy="${base_Iy}" iyz="0.0" izz="${base_Iz}"/>
			</inertial>
		</link>
		<gazebo reference="base_link">
			<turnGravityOff>false</turnGravityOff>
		</gazebo>

	</xacro:macro>
	<xacro:base_link/>


	<!--wheels-->

	<xacro:macro name="wheel" params="prefix xyz_offsets lr">	
		<link name="${prefix}_wheel">
			<visual>
				<origin xyz="0 0 0" rpy="${PI/2} 0 0" /> 
				<geometry>
					<cylinder length="${wheel_length}" radius="${wheel_radius}"/>
				</geometry>
				<material name="black">
					<color rgba="0 0 0 1"/>
				</material>
			</visual>
			<collision>
				<origin xyz="0 0 0" rpy="${PI/2} 0 0" /> 
				<geometry>
					<cylinder length="${wheel_length}" radius="${wheel_radius}"/>
				</geometry>
			</collision>
			<inertial>
				<mass value="${wheel_mass}"/>
				<inertia ixx="${wheel_Ix}" ixy="0.0" ixz="0.0" iyy="${wheel_Ix}" iyz="0.0" izz="${wheel_Iz}"/>
			</inertial>
		</link>

		<joint name="${prefix}_wheel_joint" type="continuous">
			<axis xyz="0 1 0"/>
			<parent link="base_link"/>
			<child link="${prefix}_wheel"/>
			<origin rpy="0 0 0" xyz="${xyz_offsets}"/>
			<limit effort="100" velocity="100"/>
			<joint_properties damping="0.0" friction="0.0"/>
		</joint>

		<gazebo reference="${prefix}_wheel">
 			<mu1 value="1" /> 
  			<mu2 value="1" />
  			<fdir1 value="0 0 1"/>
  			<material>Gazebo/Grey</material>
  			<turnGravityOff>false</turnGravityOff>
		</gazebo>
	</xacro:macro>

	<xacro:property name="wheel_x_sep" value="${base_length/4+0.05}"/>

	<xacro:wheel prefix="right_front" xyz_offsets="${wheel_x_sep} -${(base_width+wheel_length)/2} -${base_hight/4}" lr="1"/>

	<xacro:wheel prefix="right_rear" xyz_offsets="-${wheel_x_sep} -${(base_width+wheel_length)/2} -${base_hight/4}" lr="1"/>
	
	<xacro:wheel prefix="left_front" xyz_offsets="${wheel_x_sep} ${(base_width+wheel_length)/2} -${base_hight/4}" lr="0"/>
	
	<xacro:wheel prefix="left_rear" xyz_offsets="-${wheel_x_sep} ${(base_width+wheel_length)/2} -${base_hight/4}" lr="0"/>


	

	<gazebo reference="base_link">
		<material>Gazebo/Blue</material>
	</gazebo>
	<gazebo reference="right_front_wheel">
		<material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="right_rear_wheel">
		<material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="left_front_wheel">
		<material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="left_rear_wheel">
		<material>Gazebo/Black</material>
	</gazebo>

	<!-- Hokuyo Laser -->
	<joint name="hokuyo_joint" type="fixed">
		<origin xyz="${base_length/2 - base_length/4} 0 ${base_hight/2 + 0.05}" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="hokuyo_link"/>
	</joint>


	<link name="hokuyo_link">
		<collision>
			<geometry>
				<box size="0.1 0.1 0.1"/>
			</geometry>
		</collision>

		<visual>
			<geometry>
				<mesh filename="package://robot_description/meshes/hokuyo.dae"/>
			</geometry>
		</visual>

		<inertial>
			<mass value="1e-5" />
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>

	<gazebo reference="hokuyo_link">
		<sensor name="head_hokuyo_sensor" type="gpu_ray">
			<visualize>false</visualize>
			<update_rate>40</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>720</samples>
						<resolution>1</resolution>
						<min_angle>-1.570796</min_angle>
						<max_angle>1.570796</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>30.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin filename="libgazebo_ros_gpu_laser.so" name="gazebo_ros_head_hokuyo_controller">
				<topicName>/gazebo/laser_scan</topicName>
				<frameName>hokuyo_link</frameName>
			</plugin>
		</sensor>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>

	<!--diff drive contr-->
	<gazebo>
		<plugin name="robot_controller" filename="libgazebo_ros_plugin.so">
			<cmd_vel_topic_name>cmd_vel</cmd_vel_topic_name>
			<odom_topic_name>odom</odom_topic_name>
			<joint_states_topic_name>joint_states</joint_states_topic_name>
			<left_front_wheel_joint>left_front_wheel_joint</left_front_wheel_joint>
			<left_rear_wheel_joint>left_rear_wheel_joint</left_rear_wheel_joint>
			<right_front_wheel_joint>right_front_wheel_joint</right_front_wheel_joint>
			<right_rear_wheel_joint>right_rear_wheel_joint</right_rear_wheel_joint>
			<wheel_separation>${base_width + wheel_length}</wheel_separation>
		</plugin>
	</gazebo>

	<!--gazebo>
		<plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
			<updateRate>100.0</updateRate>
			<robotNamespace>/</robotNamespace>
			<leftFrontJoint>left_front_wheel_joint</leftFrontJoint>
			<rightFrontJoint>right_front_wheel_joint</rightFrontJoint>
			<leftRearJoint>left_rear_wheel_joint</leftRearJoint>
			<rightRearJoint>right_rear_wheel_joint</rightRearJoint>
			<wheelSeparation>${base_width + wheel_length}</wheelSeparation>
			<wheelDiameter>${wheel_radius*2}</wheelDiameter>
			<robotBaseFrame>base_link</robotBaseFrame>
			<torque>20</torque>
			<commandTopic>/gazebo/cmd_vel</commandTopic>
			<odometryTopic>/odom</odometryTopic>
			<odometryFrame>/odom</odometryFrame>
			<broadcastTF>1</broadcastTF>
		</plugin>
	</gazebo-->

	<!--gazebo>
  		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    		<robotNamespace>/robot</robotNamespace>
  		</plugin>
	</gazebo>

	<xacro:macro name="trans" params="prefix">
		<transmission name="caster_${prefix}_wheel">
			<type>transmission_interface/SimpleTransmission</type>
			<joint name="${prefix}_wheel_joint"/>
			<actuator name="${prefix}_wheel_joint_motor">
				<hardwareInterface>EffortJointInterface</hardwareInterface>
				<mechanicalReduction>50</mechanicalReduction>
			</actuator>
		</transmission>
	</xacro:macro>

	<xacro:trans prefix="rigth_front"/>

	<xacro:trans prefix="rigth_back"/>
	
	<xacro:trans prefix="left_front"/>
	
	<xacro:trans prefix="left_back"/-->


	<joint name="imu_joint" type="fixed">
    	<axis xyz="0 0 0"/> 
    	<origin xyz="0.0 0.0 0.0"/>
    	<parent link="base_link"/>
    	<child link="imu_link"/>
 	</joint>


 	<link name="imu_link">
 		<inertial>
 			<mass value="0.001"/>
 			<origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
 			<inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
 		</inertial>
 		<collision>
 			<origin rpy="0 0 0" xyz="0 0 0"/>
 			<geometry>
 				<box size=".001 .001 .001"/>
 			</geometry>
 		</collision>
 	</link>

 	<gazebo>
 		<plugin filename="libgazebo_ros_imu.so" name="imu_en_ros">
 			<alwaysOn>true</alwaysOn>
 			<updateRate>100.0</updateRate> 
 			<bodyName>imu_link</bodyName>
 			<topicName>imu_data</topicName>
 			<gaussianNoise>2.89e-08</gaussianNoise>
 			<xyzOffset>0.0 0.0 0.0</xyzOffset>
 			<rpyOffset>0.0 0.0 0.0</rpyOffset>
 		</plugin>
 		<turnGravityOff>false</turnGravityOff>
 	</gazebo>

</robot>


