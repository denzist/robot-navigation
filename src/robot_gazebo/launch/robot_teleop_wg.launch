<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/willowgarage.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="$(find xacro)/xacro.py '$(find robot_description)/urdf/robot.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model robot -param robot_description -x 0 -y 0 -z 0.5"/>

	<node respawn="true" pkg="joy"
		type="joy_node" name="joy" >
		<param name="dev" type="string" value="/dev/input/js1" />
		<param name="autorepeat_rate" value="10" />
	</node>

	<node pkg="robot_teleop" type="robot_teleop" name="robot_teleop"/>

  <!--TF transforms-->

  <node pkg="tf" type="static_transform_publisher" name="footprint_transform_pub"
   args="0 0 0 0 0 0 1 base_footprint base_link 100 " />

  <node name="laser_transform_pub" pkg="tf" type="static_transform_publisher"
  args="0.1 0 0.1125 0 0 0  base_link hokuyo_link 100"/>

  <node pkg="tf" type="static_transform_publisher" name="imu_transform_pub"
   args="0 0 0 0 0 0 1 base_link imu_link 100 " />

   <!-- Odom publisher-->
  <node name="odom_publ" pkg="robot_odom" type="robot_odom"/>


</launch>